# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from jatdb_server.models.base_model_ import Model
from jatdb_server import util


class TrelloAction(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id=None, data=None, date=None, id_member_creator=None, type=None):  # noqa: E501
        """TrelloAction - a model defined in Swagger

        :param id: The id of this TrelloAction.  # noqa: E501
        :type id: str
        :param data: The data of this TrelloAction.  # noqa: E501
        :type data: object
        :param date: The date of this TrelloAction.  # noqa: E501
        :type date: datetime
        :param id_member_creator: The id_member_creator of this TrelloAction.  # noqa: E501
        :type id_member_creator: str
        :param type: The type of this TrelloAction.  # noqa: E501
        :type type: str
        """
        self.swagger_types = {
            'id': str,
            'data': object,
            'date': datetime,
            'id_member_creator': str,
            'type': str
        }

        self.attribute_map = {
            'id': 'id',
            'data': 'data',
            'date': 'date',
            'id_member_creator': 'idMemberCreator',
            'type': 'type'
        }

        self._id = id
        self._data = data
        self._date = date
        self._id_member_creator = id_member_creator
        self._type = type

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TrelloAction of this TrelloAction.  # noqa: E501
        :rtype: TrelloAction
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this TrelloAction.

        The ID of the action  # noqa: E501

        :return: The id of this TrelloAction.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TrelloAction.

        The ID of the action  # noqa: E501

        :param id: The id of this TrelloAction.
        :type id: str
        """

        self._id = id

    @property
    def data(self):
        """Gets the data of this TrelloAction.

        Relevant information regarding the action  # noqa: E501

        :return: The data of this TrelloAction.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this TrelloAction.

        Relevant information regarding the action  # noqa: E501

        :param data: The data of this TrelloAction.
        :type data: object
        """

        self._data = data

    @property
    def date(self):
        """Gets the date of this TrelloAction.

        When the action occurred  # noqa: E501

        :return: The date of this TrelloAction.
        :rtype: datetime
        """
        return self._date

    @date.setter
    def date(self, date):
        """Sets the date of this TrelloAction.

        When the action occurred  # noqa: E501

        :param date: The date of this TrelloAction.
        :type date: datetime
        """

        self._date = date

    @property
    def id_member_creator(self):
        """Gets the id_member_creator of this TrelloAction.

        The ID of the member who caused the action  # noqa: E501

        :return: The id_member_creator of this TrelloAction.
        :rtype: str
        """
        return self._id_member_creator

    @id_member_creator.setter
    def id_member_creator(self, id_member_creator):
        """Sets the id_member_creator of this TrelloAction.

        The ID of the member who caused the action  # noqa: E501

        :param id_member_creator: The id_member_creator of this TrelloAction.
        :type id_member_creator: str
        """

        self._id_member_creator = id_member_creator

    @property
    def type(self):
        """Gets the type of this TrelloAction.

        The type of the action. See list of Action Types for options.  # noqa: E501

        :return: The type of this TrelloAction.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TrelloAction.

        The type of the action. See list of Action Types for options.  # noqa: E501

        :param type: The type of this TrelloAction.
        :type type: str
        """

        self._type = type
