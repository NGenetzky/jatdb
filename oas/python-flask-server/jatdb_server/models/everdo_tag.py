# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from jatdb_server.models.base_model_ import Model
from jatdb_server import util


class EverdoTag(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id=None, title=None, title_ts=None, color=None, color_ts=None, type=None, type_ts=None, created_on=None, changed_ts=None, removed_ts=None):  # noqa: E501
        """EverdoTag - a model defined in Swagger

        :param id: The id of this EverdoTag.  # noqa: E501
        :type id: str
        :param title: The title of this EverdoTag.  # noqa: E501
        :type title: str
        :param title_ts: The title_ts of this EverdoTag.  # noqa: E501
        :type title_ts: str
        :param color: The color of this EverdoTag.  # noqa: E501
        :type color: int
        :param color_ts: The color_ts of this EverdoTag.  # noqa: E501
        :type color_ts: int
        :param type: The type of this EverdoTag.  # noqa: E501
        :type type: str
        :param type_ts: The type_ts of this EverdoTag.  # noqa: E501
        :type type_ts: int
        :param created_on: The created_on of this EverdoTag.  # noqa: E501
        :type created_on: int
        :param changed_ts: The changed_ts of this EverdoTag.  # noqa: E501
        :type changed_ts: int
        :param removed_ts: The removed_ts of this EverdoTag.  # noqa: E501
        :type removed_ts: int
        """
        self.swagger_types = {
            'id': str,
            'title': str,
            'title_ts': str,
            'color': int,
            'color_ts': int,
            'type': str,
            'type_ts': int,
            'created_on': int,
            'changed_ts': int,
            'removed_ts': int
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'title_ts': 'title_ts',
            'color': 'color',
            'color_ts': 'color_ts',
            'type': 'type',
            'type_ts': 'type_ts',
            'created_on': 'created_on',
            'changed_ts': 'changed_ts',
            'removed_ts': 'removed_ts'
        }

        self._id = id
        self._title = title
        self._title_ts = title_ts
        self._color = color
        self._color_ts = color_ts
        self._type = type
        self._type_ts = type_ts
        self._created_on = created_on
        self._changed_ts = changed_ts
        self._removed_ts = removed_ts

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EverdoTag of this EverdoTag.  # noqa: E501
        :rtype: EverdoTag
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this EverdoTag.

        TODO  # noqa: E501

        :return: The id of this EverdoTag.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EverdoTag.

        TODO  # noqa: E501

        :param id: The id of this EverdoTag.
        :type id: str
        """

        self._id = id

    @property
    def title(self):
        """Gets the title of this EverdoTag.

        TODO  # noqa: E501

        :return: The title of this EverdoTag.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EverdoTag.

        TODO  # noqa: E501

        :param title: The title of this EverdoTag.
        :type title: str
        """

        self._title = title

    @property
    def title_ts(self):
        """Gets the title_ts of this EverdoTag.

        TODO  # noqa: E501

        :return: The title_ts of this EverdoTag.
        :rtype: str
        """
        return self._title_ts

    @title_ts.setter
    def title_ts(self, title_ts):
        """Sets the title_ts of this EverdoTag.

        TODO  # noqa: E501

        :param title_ts: The title_ts of this EverdoTag.
        :type title_ts: str
        """

        self._title_ts = title_ts

    @property
    def color(self):
        """Gets the color of this EverdoTag.

        TODO  # noqa: E501

        :return: The color of this EverdoTag.
        :rtype: int
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this EverdoTag.

        TODO  # noqa: E501

        :param color: The color of this EverdoTag.
        :type color: int
        """

        self._color = color

    @property
    def color_ts(self):
        """Gets the color_ts of this EverdoTag.

        TODO  # noqa: E501

        :return: The color_ts of this EverdoTag.
        :rtype: int
        """
        return self._color_ts

    @color_ts.setter
    def color_ts(self, color_ts):
        """Sets the color_ts of this EverdoTag.

        TODO  # noqa: E501

        :param color_ts: The color_ts of this EverdoTag.
        :type color_ts: int
        """

        self._color_ts = color_ts

    @property
    def type(self):
        """Gets the type of this EverdoTag.

        TODO  # noqa: E501

        :return: The type of this EverdoTag.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this EverdoTag.

        TODO  # noqa: E501

        :param type: The type of this EverdoTag.
        :type type: str
        """

        self._type = type

    @property
    def type_ts(self):
        """Gets the type_ts of this EverdoTag.

        TODO  # noqa: E501

        :return: The type_ts of this EverdoTag.
        :rtype: int
        """
        return self._type_ts

    @type_ts.setter
    def type_ts(self, type_ts):
        """Sets the type_ts of this EverdoTag.

        TODO  # noqa: E501

        :param type_ts: The type_ts of this EverdoTag.
        :type type_ts: int
        """

        self._type_ts = type_ts

    @property
    def created_on(self):
        """Gets the created_on of this EverdoTag.

        TODO  # noqa: E501

        :return: The created_on of this EverdoTag.
        :rtype: int
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this EverdoTag.

        TODO  # noqa: E501

        :param created_on: The created_on of this EverdoTag.
        :type created_on: int
        """

        self._created_on = created_on

    @property
    def changed_ts(self):
        """Gets the changed_ts of this EverdoTag.

        TODO  # noqa: E501

        :return: The changed_ts of this EverdoTag.
        :rtype: int
        """
        return self._changed_ts

    @changed_ts.setter
    def changed_ts(self, changed_ts):
        """Sets the changed_ts of this EverdoTag.

        TODO  # noqa: E501

        :param changed_ts: The changed_ts of this EverdoTag.
        :type changed_ts: int
        """

        self._changed_ts = changed_ts

    @property
    def removed_ts(self):
        """Gets the removed_ts of this EverdoTag.

        TODO  # noqa: E501

        :return: The removed_ts of this EverdoTag.
        :rtype: int
        """
        return self._removed_ts

    @removed_ts.setter
    def removed_ts(self, removed_ts):
        """Sets the removed_ts of this EverdoTag.

        TODO  # noqa: E501

        :param removed_ts: The removed_ts of this EverdoTag.
        :type removed_ts: int
        """

        self._removed_ts = removed_ts
